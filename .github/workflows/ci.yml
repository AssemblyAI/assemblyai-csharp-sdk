name: ci

on: [push]

jobs:
  compile:
    name: Compile
    runs-on: ubuntu-latest
    env:
      DOTNET_NOLOGO: true
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x

      - name: Install tools
        run: |
          dotnet tool restore

      - name: Build Release
        run: dotnet build src -c Release /p:ContinuousIntegrationBuild=true

  tests:
    strategy:
      fail-fast: false
      matrix:
        framework: [net462, net8.0]
        os: [ubuntu-latest, windows-latest]
        exclude:
          - os: ubuntu-latest
            framework: net462
    name: Run Tests on ${{ matrix.os }} with ${{ matrix.framework }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - uses: actions/checkout@master

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x

      - name: Install tools
        run: |
          dotnet tool restore

      - name: Run Tests
        run: |
          dotnet test src --framework ${{ matrix.framework }}
        env:
          ASSEMBLYAI_API_KEY: ${{ secrets.ASSEMBLYAI_API_KEY }}
          TEST_TRANSCRIPT_ID: ${{ secrets.TEST_TRANSCRIPT_ID }}
          TEST_TRANSCRIPT_IDS: ${{ secrets.TEST_TRANSCRIPT_IDS }}

  publish:
    name: Publish to NuGet
    needs: [compile]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x

      - name: Publish
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          dotnet pack src -c Release
          dotnet nuget push src/AssemblyAI/bin/Release/*.nupkg --api-key $NUGET_API_KEY --source "nuget.org"
